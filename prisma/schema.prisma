// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String   // You should hash and salt passwords for security.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Profile   Profile?
  assignedTasks Task[] @relation("AssignedTo")
  TeamMember TeamMember[]
}

model Profile {
  id             Int       @id @default(autoincrement())
  bio            String?
  picture        String?
  userId         Int       @unique
  user           User      @relation(fields: [userId], references: [id])
}


model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime?
  status      TaskStatus
  assignedTo  Int?     // Optional assignment to a user (foreign key to User)
  teamId      Int      // Team that the task belongs to
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assignedUser User?   @relation("AssignedTo", fields: [assignedTo], references: [id])
  team        Team     @relation(fields: [teamId], references: [id])
}


model Team {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  members   TeamMember[]
  tasks     Task[]
}

model TeamMember {
  id       Int     @id @default(autoincrement())
  userId   Int
  teamId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User     User    @relation(fields: [userId], references: [id])
  Team     Team    @relation(fields: [teamId], references: [id])
}

enum TaskStatus {
  Completed
  InProgress
  Pending
}


